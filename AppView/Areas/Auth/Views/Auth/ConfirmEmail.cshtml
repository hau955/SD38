@{
    ViewData["Title"] = "Xác nhận Email";

    // --- Tối ưu hóa logic Razor ---
    // Gộp tất cả logic C# lên đầu để dễ quản lý
    string statusClass = "warning"; // Mặc định là trạng thái chờ
    string iconClass = "fas fa-envelope-open-text";
    string headerClass = "warning";
    string messageClass = "warning";
    string animationClass = "pulse-animation";
    string title = "Xác Nhận Email";
    string subtitle = "Vui lòng kiểm tra thông tin bên dưới";
    string message = "<p>Chúng tôi đã gửi một email xác nhận. Vui lòng kiểm tra hộp thư và nhấn vào liên kết để hoàn tất quá trình đăng ký.</p>";
    bool isSuccess = ViewBag.IsSuccess == true;
    bool isError = ViewBag.IsError == true;
    bool isWarning = !isSuccess && !isError; // Trạng thái chờ (warning)

    if (isSuccess)
    {
        statusClass = "success";
        iconClass = "fas fa-check-circle";
        headerClass = ""; // Dùng màu mặc định cho thành công
        messageClass = ""; // Dùng màu mặc định cho thành công
        animationClass = "success-animation";
        title = "Xác Nhận Thành Công!";
        subtitle = "Chào mừng bạn đến với cộng đồng áo dài";
        message = ViewBag.Message?.ToString() ?? "<p>Email của bạn đã được xác nhận thành công! Bây giờ bạn có thể đăng nhập và khám phá bộ sưu tập áo dài của chúng tôi.</p>";
    }
    else if (isError)
    {
        statusClass = "error";
        iconClass = "fas fa-times-circle";
        headerClass = "error";
        messageClass = "error";
        animationClass = "pulse-animation";
        title = "Xác Nhận Thất Bại";
        subtitle = "Có lỗi xảy ra trong quá trình xác nhận";
        message = ViewBag.Message?.ToString() ?? "<p>Liên kết xác nhận không hợp lệ hoặc đã hết hạn. Vui lòng thử lại hoặc liên hệ với chúng tôi để được hỗ trợ.</p>";
    }
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">

<style>
    /* CSS của bạn vẫn giữ nguyên, chỉ sửa lại keyframes bị lỗi */
    .confirm-email-page {
        font-family: 'Inter', sans-serif;
        background: linear-gradient(135deg, #fff7ed 0%, #fed7aa 50%, #fdba74 100%);
        min-height: 100vh;
        padding: 20px 0;
        position: relative;
        overflow: hidden;
    }

    .background-pattern {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.3) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.3) 0%, transparent 50%), radial-gradient(circle at 40% 40%, rgba(251, 191, 36, 0.1) 0%, transparent 50%);
        z-index: 1;
    }

    .confirm-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        position: relative;
        z-index: 2;
    }

    .confirm-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 24px;
        box-shadow: 0 20px 60px rgba(251, 146, 60, 0.15), 0 8px 32px rgba(251, 146, 60, 0.1);
        max-width: 500px;
        width: 100%;
        overflow: hidden;
        border: 2px solid rgba(251, 191, 36, 0.2);
        transition: all 0.6s ease;
        text-align: center;
    }

        .confirm-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 30px 80px rgba(251, 146, 60, 0.2), 0 12px 40px rgba(251, 146, 60, 0.15);
            border-color: rgba(251, 191, 36, 0.3);
        }

    .card-header {
        background: linear-gradient(135deg, #fb923c 0%, #f59e0b 100%);
        padding: 40px 30px 30px;
        position: relative;
        overflow: hidden;
    }

        .card-header.error {
            background: linear-gradient(135deg, #f97316 0%, #ea580c 100%);
        }

        .card-header.warning {
            background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
        }

        .card-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient( 45deg, transparent, transparent 10px, rgba(255, 255, 255, 0.1) 10px, rgba(255, 255, 255, 0.1) 20px );
        }

    .status-icon {
        width: 100px;
        height: 100px;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 20px;
        border: 3px solid rgba(255, 255, 255, 0.5);
        backdrop-filter: blur(10px);
        position: relative;
        z-index: 1;
    }

        .status-icon i {
            font-size: 40px;
            color: white;
        }

    .card-title {
        font-family: 'Playfair Display', serif;
        color: white;
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 8px;
        position: relative;
        z-index: 1;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .card-subtitle {
        color: rgba(255, 255, 255, 0.95);
        font-size: 14px;
        font-weight: 400;
        position: relative;
        z-index: 1;
    }

    .card-body {
        padding: 40px 30px;
        background: linear-gradient(to bottom, #ffffff, #fffbeb);
    }

    .message-content {
        font-size: 16px;
        line-height: 1.6;
        color: #92400e;
        margin-bottom: 30px;
        padding: 20px;
        background: linear-gradient(135deg, #fefce8, #fef3c7);
        border-radius: 12px;
        border-left: 4px solid #fb923c;
        border: 1px solid rgba(251, 191, 36, 0.2);
    }

        .message-content.error {
            background: linear-gradient(135deg, #fff7ed, #fed7aa);
            border-left-color: #f97316;
            border-color: rgba(249, 115, 22, 0.2);
            color: #c2410c;
        }

        .message-content.warning {
            background: linear-gradient(135deg, #fffbeb, #fde68a);
            border-left-color: #fbbf24;
            border-color: rgba(251, 191, 36, 0.2);
            color: #d97706;
        }

    .action-buttons {
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn-custom {
        padding: 14px 28px;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        min-width: 140px;
    }

    .btn-primary-custom {
        background: linear-gradient(135deg, #fb923c 0%, #f59e0b 100%);
        color: white;
        border: 2px solid transparent;
    }

        .btn-primary-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 24px rgba(251, 146, 60, 0.4);
            color: white;
            text-decoration: none;
            background: linear-gradient(135deg, #f97316 0%, #ea580c 100%);
        }

    .btn-secondary-custom {
        background: linear-gradient(135deg, #ffffff 0%, #fef3c7 100%);
        color: #92400e;
        border: 2px solid #fb923c;
    }

        .btn-secondary-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 24px rgba(251, 146, 60, 0.3);
            color: #92400e;
            text-decoration: none;
            background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
        }

    .btn-success-custom {
        background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
        color: white;
        border: 2px solid transparent;
    }

        .btn-success-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 24px rgba(251, 191, 36, 0.4);
            color: white;
            text-decoration: none;
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        }

    .floating-decoration {
        position: absolute;
        color: rgba(251, 146, 60, 0.2);
        font-size: 60px;
        pointer-events: none;
        z-index: 1;
    }

    .decoration-1 {
        top: 10%;
        left: 5%;
        color: rgba(251, 191, 36, 0.3);
    }

    .decoration-2 {
        top: 70%;
        right: 5%;
        font-size: 40px;
        color: rgba(251, 146, 60, 0.3);
    }

    .decoration-3 {
        bottom: 20%;
        left: 10%;
        font-size: 50px;
        color: rgba(245, 158, 11, 0.3);
    }

    .success-animation {
        animation: bounce 2s ease-in-out;
    }
    /* SỬA LỖI: Thiếu dấu {} */
    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100%

    {
        transform: translateY(0);
    }

    40% {
        transform: translateY(-10px);
    }

    60% {
        transform: translateY(-5px);
    }

    }

    .pulse-animation {
        animation: pulse 2s infinite;
    }
    @@keyframes pulse {
        0%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.05);
    }

    100% {
        transform: scale(1);
    }

    }

    @@media (max-width: 576px) {
        .confirm-container

    {
        padding: 15px;
    }

    .card-header {
        padding: 30px 20px 25px;
    }

    .card-body {
        padding: 30px 20px;
    }

    .card-title {
        font-size: 24px;
    }

    .action-buttons {
        flex-direction: column;
    }

    .btn-custom {
        width: 100%;
    }

    }
</style>

<div class="confirm-email-page">
    <div class="background-pattern"></div>
    <div class="floating-decoration decoration-1">✉️</div>
    <div class="floating-decoration decoration-2">✅</div>
    <div class="floating-decoration decoration-3">🌸</div>

    <div class="confirm-container">
        <div class="confirm-card">
            <div class="card-header @headerClass">
                <div class="status-icon @animationClass">
                    <i class="@iconClass"></i>
                </div>
                <h1 class="card-title">@title</h1>
                <p class="card-subtitle">@subtitle</p>
            </div>

            <div class="card-body">
                <div class="message-content @messageClass">
                    @Html.Raw(message)
                </div>

                <div class="action-buttons">
                    @if (isSuccess)
                    {
                        <a href="@Url.Action("Index", "Home")" class="btn-custom btn-primary-custom">
                            <i class="fas fa-sign-in-alt me-2"></i>
                            Đăng Nhập Ngay
                        </a>
                        <a href="@Url.Action("Index", "Home")" class="btn-custom btn-secondary-custom">
                            <i class="fas fa-home me-2"></i>
                            Về Trang Chủ
                        </a>
                    }
                    else if (isError)
                    {
                        <a href="@Url.Action("Index", "Home")" class="btn-custom btn-primary-custom">
                            <i class="fas fa-user-plus me-2"></i>
                            Đăng Ký Lại
                        </a>
                        <a href="@Url.Action("Index", "Home")" class="btn-custom btn-success-custom">
                            <i class="fas fa-envelope me-2"></i>
                            Gửi Lại Email
                        </a>
                    }
                    else // isWarning
                    {
                        <a href="@Url.Action("Login", "Auth", new { area = "Auth" })" class="btn-custom btn-primary-custom">
                            <i class="fas fa-sign-in-alt me-2"></i>
                            Đăng Nhập
                        </a>
                        <a href="@Url.Action("Register", "Auth", new { area = "Auth" })" class="btn-custom btn-secondary-custom">
                            <i class="fas fa-user-plus me-2"></i>
                            Đăng Ký
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // ---- SỬA LẠI LOGIC JAVASCRIPT ----

        // 1. Truyền các biến trạng thái từ Razor vào JS một cách an toàn
        const isSuccess = @isSuccess.ToString().ToLower();
        const isWarning = @isWarning.ToString().ToLower();

        // 2. Animation khi card xuất hiện
        const card = document.querySelector('.confirm-card');
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        setTimeout(() => {
            card.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, 100);

        // 3. Hiệu ứng confetti chỉ khi thành công
        if (isSuccess) {
            function createConfetti() {
                const colors = ['#fb923c', '#f59e0b', '#fbbf24', '#fde68a'];
                for (let i = 0; i < 50; i++) {
                    setTimeout(() => {
                        const confetti = document.createElement('div');
                        confetti.style.position = 'fixed';
                        confetti.style.left = Math.random() * 100 + '%';
                        confetti.style.top = '-10px';
                        confetti.style.width = '10px';
                        confetti.style.height = '10px';
                        confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                        confetti.style.borderRadius = '50%';
                        confetti.style.zIndex = '9999';
                        confetti.style.pointerEvents = 'none';
                        confetti.style.transition = 'all 3s ease';
                        document.body.appendChild(confetti);

                        // Trigger animation
                        setTimeout(() => {
                            confetti.style.top = window.innerHeight + 'px';
                            confetti.style.transform = 'rotate(720deg)';
                        }, 50);

                        // Remove after animation
                        setTimeout(() => { confetti.remove(); }, 3050);

                    }, i * 100);
                }
            }
            setTimeout(createConfetti, 500);
        }

        // 4. Tự động kiểm tra lại trang nếu đang ở trạng thái chờ xác nhận (warning)
        if (isWarning) {
            const maxRefresh = 10; // Tối đa 10 lần (5 phút)
            let refreshCount = parseInt(sessionStorage.getItem('refreshCount') || '0');

            if (refreshCount < maxRefresh) {
                console.log(`Sẽ kiểm tra lại trạng thái sau 30 giây... (Lần ${refreshCount + 1}/${maxRefresh})`);
                setTimeout(() => {
                    sessionStorage.setItem('refreshCount', ++refreshCount);
                    window.location.reload();
                }, 30000); // 30 giây
            } else {
                console.log('Đã dừng tự động kiểm tra trạng thái.');
            }
        } else {
            // Xóa bộ đếm nếu trang đã ở trạng thái thành công hoặc lỗi
            sessionStorage.removeItem('refreshCount');
        }
    });
</script>