@model IEnumerable<AppData.Models.GioHangCT>
@{
    ViewData["Title"] = "Giỏ hàng";
    var tongTien = Model.Sum(x => x.SoLuong * x.DonGia);
    var baseUrl = "https://localhost:7221/";
}

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background: #f5f5f5;
        color: #333;
    }

    /* Container */
    .cart-container {
        max-width: 1100px;
        margin: 40px auto;
        background: #fff;
        padding: 35px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        border-radius: 15px;
    }

    h1 {
        font-size: 28px;
        text-align: center;
        margin-bottom: 30px;
        font-weight: 700;
        border-bottom: 2px solid #eee;
        padding-bottom: 15px;
    }

    /* Cart table */
    .cart-header, .cart-item {
        display: grid;
        grid-template-columns: 3fr 1fr 2fr 1fr;
        gap: 10px;
        text-align: center;
    }

    .cart-header {
        font-weight: 600;
        font-size: 16px;
        border-bottom: 2px solid #eee;
        padding-bottom: 15px;
    }

    .cart-item {
        align-items: center;
        padding: 18px 0;
        border-bottom: 1px solid #f0f0f0;
    }

    .item-info {
        display: flex;
        align-items: center;
        gap: 15px;
        text-align: left;
    }

        .item-info img {
            width: 100px;
            height: 100px;
            border-radius: 10px;
            object-fit: cover;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        }

    .details h2 {
        font-size: 16px;
        margin: 0 0 5px;
        font-weight: 600;
    }

    .details p {
        margin: 3px 0;
        font-size: 14px;
        color: #666;
    }

    .remove {
        font-size: 13px;
        color: #d9534f;
        cursor: pointer;
        border: none;
        background: none;
    }

    .item-price, .item-total {
        font-weight: 600;
        font-size: 16px;
    }

    /* Quantity */
    .item-quantity {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 5px;
    }

    .qty-btn {
        width: 35px;
        height: 35px;
        background: #eee;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 18px;
    }

        .qty-btn:hover {
            background: #ddd;
        }

    .qty-input {
        width: 50px;
        text-align: center;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 6px;
    }

    .update-btn {
        display: inline-block;
        padding: 6px 14px;
        margin-left: 8px;
        font-size: 14px;
        font-weight: 600;
        color: #fff;
        background: #4CAF50; /* xanh lá */
        border: none;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        box-shadow: 0 3px 6px rgba(0,0,0,0.1);
    }

    /* Footer */
    .cart-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 25px;
        flex-wrap: wrap;
        gap: 15px;
    }

    .total-amount {
        font-size: 20px;
        font-weight: 700;
    }

    .cart-buttons button {
        padding: 12px 25px;
        background: #ff6b35;
        color: #fff;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
    }

        .cart-buttons button:hover {
            background: #e85c2e;
        }

    /* Modal */
    #checkoutModal {
        display: none;
        position: fixed;
        top: 5%;
        left: 50%;
        transform: translateX(-50%);
        background: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.25);
        z-index: 1000;
        width: 55%;
        max-height: 85%;
        overflow-y: auto;
    }

        #checkoutModal h2 {
            text-align: center;
            margin-bottom: 25px;
            color: #2c3e50;
        }

        #checkoutModal h3 {
            font-size: 16px;
            margin: 18px 0 8px;
            color: #34495e;
        }

        #checkoutModal select,
        #checkoutModal textarea {
            width: 100%;
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
        }

    .checkout-summary {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        font-size: 15px;
        margin: 15px 0;
    }

        .checkout-summary p {
            margin: 5px 0;
        }

        .checkout-summary strong {
            font-size: 18px;
            color: #e74c3c;
        }

    .modal-actions {
        text-align: right;
        margin-top: 20px;
    }

        .modal-actions button {
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            border: none;
        }

    .btn-confirm {
        background: #ff6b35;
        color: #fff;
    }

    .btn-cancel {
        background: #eee;
        margin-left: 10px;
    }
</style>

<div class="cart-container">
    <h1>Giỏ hàng</h1>

    <div class="cart-header">
        <div>Sản phẩm</div>
        <div>Giá</div>
        <div>Số lượng</div>
        <div>Tổng</div>
    </div>

    @foreach (var item in Model)
    {
        <div class="cart-item">
            <div class="item-info">
                

                <img src="@($"{baseUrl}{@item.SanPhamCT?.SanPham?.AnhSanPhams.FirstOrDefault(b=>b.AnhChinh==true)?.DuongDanAnh}")" alt="@item.SanPhamCT?.SanPham?.TenSanPham" />
                <div class="details">
                    <h2>@item.SanPhamCT?.SanPham?.TenSanPham</h2>
                    <p>Size: @item.SanPhamCT?.SizeAo?.SoSize / Màu: @item.SanPhamCT?.MauSac?.TenMau</p>
                    <p>Thương hiệu: @item.SanPhamCT?.ChatLieu?.TenChatLieu</p>
                    <form asp-action="Delete" method="post" style="display:inline">
                        <input type="hidden" name="IdGioHangCT" value="@item.IDGioHangChiTiet" />
                        <button type="submit" class="remove">🗑 Xóa</button>
                    </form>
                </div>
            </div>
            <div class="item-price">@item.DonGia.ToString("N0")₫</div>
            <div class="item-quantity">
                <form asp-action="UpdateQty" method="post" class="qty-form">
                    <input type="hidden" name="IdGioHangCT" value="@item.IDGioHangChiTiet" />
                    <button type="button" class="qty-btn" onclick="changeQty(this,-1)">−</button>
                    <input type="text" name="SoLuongMoi" value="@item.SoLuong" class="qty-input" readonly />
                    <button type="button" class="qty-btn" onclick="changeQty(this,1)">+</button>
                    <button type="submit" class="update-btn">Cập nhật</button>
                </form>
            </div>
            <div class="item-total">@((item.SoLuong * item.DonGia).ToString("N0"))₫</div>
        </div>
    }

    <div class="cart-footer">
        <div class="total-amount">
            Tổng tiền: <strong>@tongTien.ToString("N0") ₫</strong>
        </div>
        <div class="cart-buttons">
            <button type="button" onclick="openCheckoutModal()">Thanh toán</button>
        </div>
    </div>
</div>

<!-- Modal Checkout -->
<div id="checkoutModal">
    <h2>🛒 Thanh toán đơn hàng</h2>

    <h3>1. Địa chỉ nhận hàng</h3>
    <div id="diaChiList"></div>

    <h3>2. Hình thức thanh toán</h3>
    <select id="selectHinhThucTT"></select>

    <h3>3. Chọn voucher</h3>
    <select id="selectVoucher" onchange="applyVoucher()">
        <option value="">Không dùng voucher</option>
    </select>

    <h3>4. Ghi chú</h3>
    <textarea id="noteModal" placeholder="Nhập ghi chú..."></textarea>

    <div class="checkout-summary" id="checkoutSummary">
        <p>Tiền hàng: <span id="checkoutTienHang">0 ₫</span></p>
        <p>Phí ship: <span id="checkoutPhiShip">30,000 ₫</span></p>
        <p>Giảm giá: <span id="checkoutGiamGia">0 ₫</span></p>
        <p><strong>Tổng cộng: <span id="checkoutTotal">0 ₫</span></strong></p>
    </div>

    <div class="modal-actions">
        <button class="btn-confirm" onclick="confirmCheckout()">Xác nhận</button>
        <button class="btn-cancel" onclick="closeCheckoutModal()">Hủy</button>
    </div>
</div>

@section Scripts {
    <script>
        let tongTienHang = @tongTien;
        let phiShip = 30000;
        let danhSachVoucher = [];

        function changeQty(button, delta){
            const form = button.closest(".qty-form");
            const input = form.querySelector(".qty-input");
            let value = parseInt(input.value) || 0;
            value += delta;
            if(value<1) value=1;
            input.value=value;
        }

        async function openCheckoutModal(){
            document.getElementById("checkoutModal").style.display="block";
            await loadDiaChiUser();
            await loadCheckoutOptions();
        }
        function closeCheckoutModal(){
            document.getElementById("checkoutModal").style.display="none";
        }

        // Load địa chỉ
        async function loadDiaChiUser(){
            const idUser = "@Context.Session.GetString("ID")";
            const res = await fetch(`https://localhost:7221/api/HoaDon/diachi/${idUser}`);
            const diaChiListDiv = document.getElementById("diaChiList");
            diaChiListDiv.innerHTML="";
            if(res.ok){
                const data = await res.json();
                if(data.length===0){
                    diaChiListDiv.innerHTML="<p style='color:red'>⚠️ Bạn chưa có địa chỉ</p>";
                    return;
                }
                data.forEach((dc,index)=>{
                    const label = document.createElement("label");
                    label.style.display="block";
                    label.innerHTML = `
                        <input type="radio" name="idDiaChi" value="${dc.idDiaChiNhanHang}" ${(dc.isDefault || index===0)?"checked":""} />
                        ${dc.hoTenNguoiNhan} - ${dc.diaChiChiTiet} - ${dc.soDienThoai}
                    `;
                    diaChiListDiv.appendChild(label);
                });
            }
        }

        // Load thanh toán + voucher
        async function loadCheckoutOptions(){
            // Hình thức thanh toán
            const resTT = await fetch('https://localhost:7221/api/HoaDon/get-hinhthucthanhtoan');
            if(resTT.ok){
                const dataTT = await resTT.json();
                const selectTT = document.getElementById("selectHinhThucTT");
                selectTT.innerHTML="";
                dataTT.forEach(tt=>{
                    const option = document.createElement("option");
                    option.value=tt.idHinhThucTT;
                    option.textContent=tt.tenHinhThucTT;
                    selectTT.appendChild(option);
                });
            }

            // Voucher
            const resVoucher = await fetch('https://localhost:7221/api/HoaDon/get-all');
            if(resVoucher.ok){
                const dataVoucher = await resVoucher.json();
                danhSachVoucher = dataVoucher.data;
                const selectVoucher = document.getElementById("selectVoucher");
                selectVoucher.innerHTML = '<option value="">Không dùng voucher</option>';
                dataVoucher.data.forEach(v=>{
                    if(v.soLanSuDungToiDa && v.daSuDung >= v.soLanSuDungToiDa) return;
                    const option = document.createElement("option");
                    option.value=v.idVoucher;
                    option.textContent=`${v.codeVoucher} - Giảm ${v.phanTram ? v.phanTram+"%" : (v.soTienGiam?.toLocaleString()+" ₫")}`;
                    selectVoucher.appendChild(option);
                });
            }
            // 👉 Tính tổng ngay khi load
            applyVoucher();
        }

        function applyVoucher(){
            const selectVoucher = document.getElementById("selectVoucher");
            const idVoucher = selectVoucher.value;
            let tong = tongTienHang + phiShip;
            let giam = 0;

            if(idVoucher){
                const voucher = danhSachVoucher.find(v => v.idVoucher === idVoucher);
                if(voucher){
                    if(voucher.phanTram){
                        giam = Math.round(tong * voucher.phanTram / 100);
                        tong -= giam;
                    } else if(voucher.soTienGiam){
                        giam = voucher.soTienGiam;
                        tong -= giam;
                    }
                }
            }
            if(tong < 0) tong = 0;

            document.getElementById("checkoutTienHang").innerText = tongTienHang.toLocaleString()+" ₫";
            document.getElementById("checkoutPhiShip").innerText = phiShip.toLocaleString()+" ₫";
            document.getElementById("checkoutGiamGia").innerText = "-"+giam.toLocaleString()+" ₫";
            document.getElementById("checkoutTotal").innerText = tong.toLocaleString()+" ₫";
        }

        async function confirmCheckout(){
            const idUser = "@Context.Session.GetString("ID")";
            const idHinhThucTT = document.getElementById("selectHinhThucTT").value;
            const idVoucher = document.getElementById("selectVoucher").value || null;
            const note = document.getElementById("noteModal").value;
            const diaChiRadio = document.querySelector("input[name='idDiaChi']:checked");
            if(!diaChiRadio){ alert("⚠️ Vui lòng chọn địa chỉ"); return; }
            const idDiaChi = diaChiRadio.value;

            try{
                const res = await fetch(`https://localhost:7221/api/HoaDon/checkout?idUser=${idUser}&idHinhThucTT=${idHinhThucTT}&idVoucher=${idVoucher}&idDiaChi=${idDiaChi}&ghiChu=${encodeURIComponent(note)}`, {method:"POST"});
                const data = await res.json();
                if(res.ok){
                    alert("✅ Thanh toán thành công");
                    if(data.hoaDon && data.hoaDon.iDHoaDon){
                        window.location.href="/HoaDon/ChiTiet/"+data.hoaDon.iDHoaDon;
                    } else window.location.reload();
                } else {
                    alert("❌ Lỗi: "+(data.message || "Thanh toán thất bại"));
                }
            }catch(err){
                console.error(err);
                alert("❌ Lỗi kết nối API");
            }
        }
    </script>
}
