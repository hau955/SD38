@model AppApi.ViewModels.SanPham.SanPhamView
@{
    var baseUrl = "https://localhost:7221/";
    var id = Context.Session.GetString("ID");
    var roles = Context.Session.GetString("Roles") ?? "";

}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@Model.TenSanPham</title>
    <link rel="stylesheet" href="~/css/style.css" />

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .image-gallery {
            display: flex;
            gap: 15px;
        }
        .thumbnails {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        .thumbnails img {
            width: 60px;
            height: 80px;
            object-fit: cover;
            cursor: pointer;
            border: 2px solid transparent;
            border-radius: 5px;
        }
        .thumbnails img.active {
            border-color: #007bff;
        }
        .main-image {
            position: relative;
            width: 400px;
            height: 500px;
            border: 1px solid #ddd;
            overflow: hidden;
        }
        .main-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        #magnifier {
            position: absolute;
            border: 2px solid #ccc;
            border-radius: 50%;
            cursor: none;
            display: none;
            pointer-events: none;
            background-color: white;
            opacity: 0.9;
        }
        .product-info {
            margin-left: 30px;
            max-width: 400px;
        }
        .size-popup {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .popup-content {
            background: white;
            padding: 20px;
            border-radius: 8px;
            max-width: 700px;
        }
        .close-btn {
            float: right;
            cursor: pointer;
            font-size: 20px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="wrapper">
        <div class="container" style="display:flex;">
            <!-- Bộ sưu tập ảnh -->
            <div class="image-gallery">
                <div class="thumbnails">
                    @for (int i = 0; i < Model.DanhSachAnh.Count; i++)
                    {
                        var anh = Model.DanhSachAnh[i];
                        <img src="@($"{baseUrl}{anh.DuongDanAnh}")"
                             alt="Ảnh sản phẩm"
                             class="thumb @(i==0 ? "active" : "")"
                             data-src="@($"{baseUrl}{anh.DuongDanAnh}")" />
                    }
                </div>

                <div class="main-image" id="mainImageContainer">
                    <img id="mainImage" src="@($"{baseUrl}{Model.DanhSachAnh.FirstOrDefault()?.DuongDanAnh}")" alt="Ảnh lớn" />
                    <div id="magnifier"></div>
                </div>
            </div>

            <!-- Thông tin sản phẩm -->
            <div class="product-info">
                <h1>@Model.TenSanPham</h1>
                <p class="brand">Thương hiệu: <strong>@Model.TenDanhMuc</strong></p>

                <div class="price">
                    <span class="old-price" style="text-decoration:line-through; color:#888;">
                        @Model.ChiTiets.FirstOrDefault()?.GiaBan.ToString("N0")₫
                    </span>
                    <span class="new-price" style="color:red; font-weight:bold; margin-left:10px;">
                        @Model.ChiTiets.FirstOrDefault()?.GiaSauGiam.ToString("N0")₫
                    </span>
                </div>

                <a href="#" class="zalo-link">💬 Nhấn để được tư vấn và nhận ưu đãi</a><br />
                <a href="javascript:void(0)" class="size-guide" onclick="openSizePopup()">📏 HƯỚNG DẪN CHỌN SIZE</a>

                <!-- Chọn thuộc tính sản phẩm -->
                <div class="options" style="margin-top:15px;">
                    <!-- Size -->
                    <label><strong>Chọn size:</strong></label>
                    <select id="sizeSelect" class="form-control">
                        @foreach (var g in Model.ChiTiets.GroupBy(c => c.Size))
                        {
                            var tongTon = g.Sum(c => c.SoLuongTonKho);
                            var disabled = tongTon <= 0 ? "disabled" : "";
                            var label = tongTon <= 0 ? $"{g.Key} (Hết hàng)" : g.Key;

                            <option value="@g.Key" disabled="@(tongTon <= 0 ? "disabled" : null)">
                                @label
                            </option>

                        }
                    </select>

                    <!-- Màu sắc -->
                    <label style="margin-top:10px;"><strong>Chọn màu sắc:</strong></label>
                    <select id="colorSelect" class="form-control">
                        @foreach (var g in Model.ChiTiets.GroupBy(c => c.MauSac))
                        {
                            var tongTon = g.Sum(c => c.SoLuongTonKho);
                            var disabled = tongTon <= 0 ? "disabled" : "";
                            var label = tongTon <= 0 ? $"{g.Key} (Hết hàng)" : g.Key;

                            <option value="@g.Key" disabled="@(tongTon <= 0 ? "disabled" : null)">
                                @label
                            </option>


                        }
                    </select>

                    <!-- Chất liệu -->
                    <label style="margin-top:10px;"><strong>Chọn chất liệu:</strong></label>
                    <select id="materialSelect" class="form-control">
                        @foreach (var g in Model.ChiTiets.GroupBy(c => c.ChatLieu))
                        {
                            var tongTon = g.Sum(c => c.SoLuongTonKho);
                            var disabled = tongTon <= 0 ? "disabled" : "";
                            var label = tongTon <= 0 ? $"{g.Key} (Hết hàng)" : g.Key;

                            <option value="@g.Key" disabled="@(tongTon <= 0 ? "disabled" : null)">
                                @label
                            </option>

                        }
                    </select>

                    <!-- Nhập số lượng -->
                    <label style="margin-top:10px;"><strong>Số lượng:</strong></label>
                    <input id="quantityInput" type="number" value="1" min="1" class="form-control" style="width:80px;" />
                </div>

                <!-- Nút thêm giỏ hàng -->
                <!-- Nút thêm giỏ hàng -->
                @if (roles.Contains("Customer"))
                {
                    <button id="addToCartBtn" class="btn btn-success" style="margin-top:15px;">
                        🛒 Thêm vào giỏ hàng
                    </button>
                }
                else
                {
                    <div class="alert alert-warning mt-3">
                        ⚠️ Bạn phải <a href="#" class="text-primary fw-bold">đăng ký</a> mới có thể mua sản phẩm.
                    </div>
                }


                <div class="description" style="margin-top:20px;">
                    <p><strong>Mô tả:</strong> @Model.MoTa</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Popup Size -->
    <div id="sizeGuidePopup" class="size-popup" style="display:none;">
        <div class="popup-content">
            <span class="close-btn" onclick="closeSizePopup()">&times;</span>
            <h2>HƯỚNG DẪN CHỌN SIZE</h2>
            <!-- Bảng size như cũ -->
            <table border="1" cellspacing="0" cellpadding="5">
                <thead>
                    <tr>
                        <th>SIZE</th>
                        <th>S - 02</th>
                        <th>M - 04</th>
                        <th>L - 06</th>
                        <th>XL - 08</th>
                        <th>2XL - 10</th>
                        <th>3XL - 12</th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td>VAI (cm)</td><td>35</td><td>36</td><td>37</td><td>38</td><td>39</td><td>40</td></tr>
                    <tr><td>NGỰC (cm)</td><td>82</td><td>86</td><td>90</td><td>94</td><td>98</td><td>102</td></tr>
                    <tr><td>EO (cm)</td><td>66</td><td>70</td><td>75</td><td>80</td><td>84</td><td>88</td></tr>
                    <tr><td>MÔNG (cm)</td><td>86</td><td>90</td><td>94</td><td>98</td><td>102</td><td>106</td></tr>
                    <tr><td>CÂN NẶNG (kg)</td><td>45-50</td><td>51-55</td><td>56-60</td><td>61-64</td><td>65-68</td><td>69-70</td></tr>
                    <tr><td>CHIỀU CAO (cm)</td><td>150-160</td><td>155-160</td><td>155-160</td><td>160-165</td><td>160-165</td><td>160-165</td></tr>
                </tbody>
            </table>
        </div>
    </div>
</body>
</html>

<script>
    const userId = "@id";
    const baseUrl = "https://localhost:7221/";

    // 👉 Đổi ảnh khi click thumbnail
    const thumbs = document.querySelectorAll(".thumb");
    const mainImage = document.getElementById("mainImage");
    thumbs.forEach(thumb => {
        thumb.addEventListener("click", function () {
            mainImage.src = this.dataset.src;
            thumbs.forEach(t => t.classList.remove("active"));
            this.classList.add("active");
        });
    });

    // 👉 Zoom (soi ảnh)
    const magnifier = document.getElementById("magnifier");
    const mainImageContainer = document.getElementById("mainImageContainer");
    const magnifierSize = 150;
    magnifier.style.width = magnifier.style.height = magnifierSize + "px";

    mainImageContainer.addEventListener("mousemove", function (e) {
        const rect = mainImage.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        let magX = x - magnifierSize / 2;
        let magY = y - magnifierSize / 2;
        if (magX < 0) magX = 0;
        if (magY < 0) magY = 0;
        if (magX > rect.width - magnifierSize) magX = rect.width - magnifierSize;
        if (magY > rect.height - magnifierSize) magY = rect.height - magnifierSize;

        magnifier.style.left = magX + "px";
        magnifier.style.top = magY + "px";
        magnifier.style.display = "block";
        magnifier.style.backgroundImage = `url(${mainImage.src})`;
        magnifier.style.backgroundRepeat = "no-repeat";
        magnifier.style.backgroundSize = `${rect.width * 2}px ${rect.height * 2}px`;
        magnifier.style.backgroundPosition = `-${x * 2 - magnifierSize / 2}px -${y * 2 - magnifierSize / 2}px`;
    });
    mainImageContainer.addEventListener("mouseleave", () => magnifier.style.display = "none");

    // 👉 Thêm giỏ hàng với confirm
       document.getElementById('addToCartBtn').addEventListener('click', async function () {
        const size = document.getElementById('sizeSelect').value;
        const color = document.getElementById('colorSelect').value;
        const material = document.getElementById('materialSelect').value;
        const quantity = parseInt(document.getElementById('quantityInput').value) || 1;
        const chiTiets = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.ChiTiets));
        const matched = chiTiets.find(ct => ct.Size === size && ct.MauSac === color && ct.ChatLieu === material);

        if (!matched || matched.SoLuongTonKho <= 0) {
            Swal.fire("Lỗi", "❌ Sản phẩm này đã hết hàng!", "error");
            return;
        }

        if (quantity > matched.SoLuongTonKho) {
            Swal.fire("Lỗi", `❌ Chỉ còn ${matched.SoLuongTonKho} sản phẩm trong kho!`, "error");
            return;
        }

        Swal.fire({
            title: "Xác nhận",
            text: `Bạn có chắc chắn muốn thêm ${quantity} sản phẩm này vào giỏ hàng không?`,
            icon: "question",
            showCancelButton: true,
            confirmButtonText: "Có, thêm ngay",
            cancelButtonText: "Hủy",
            reverseButtons: true
        }).then(async (result) => {
            if (result.isConfirmed) {
                const request = { idUser: userId, idSanPhamCT: matched.IDSanPhamCT, soLuong: quantity };
                try {
                    const response = await fetch(`${baseUrl}api/GioHang/them`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(request)
                    });
                    const result = await response.json();
                    Swal.fire("Thành công", result.message ?? `✅ Đã thêm ${quantity} sản phẩm vào giỏ!`, "success");
                } catch (error) {
                    console.error(error);
                    Swal.fire("Lỗi", "❌ Có lỗi khi thêm vào giỏ hàng!", "error");
                }
            }
        });
    });

    // 👉 Popup size
    function openSizePopup() {
        document.getElementById('sizeGuidePopup').style.display = 'flex';
    }
    function closeSizePopup() {
        document.getElementById('sizeGuidePopup').style.display = 'none';
    }
</script>